Our team has decided upon using the three-tier architecture pattern for our project. A three-tier architecture is a client-server architecture in which the functional process logic, data access, computer data storage and user interface are developed and maintained as independent modules on separate platforms.

This decision is justified through the benefits a three-tier architecture can give. Firstly, it gives developers the ability to update one tier without it having to impact other areas of the application. Secondly, it aligns with the SCRUM development method through allowing multiple developers to work on their areas of expertise. Lastly, the product stays lean and adaptable, with scalability being simple due to the database not being locked into this particular technology, allowing for any technological advancements to be utilised and deployed as they become available.
